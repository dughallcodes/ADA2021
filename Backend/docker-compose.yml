version: "3.7"

services:
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"
      - "5671:5671"
    labels:
      NAME: "rabbitmq"
    volumes:
      - ./RabbitMQ/data/:/var/lib/rabbitmq/
      - ./RabbitMQ/log/:/var/log/rabbitmq/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5

  pgdb_orders: 
    image: postgres
    container_name:  pgdb_orders
    volumes: 
      - ./OrderService/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    expose:
      - "5433"
    ports:
      - "5433:5432"
    environment: 
      - POSTGRES_DB=orders
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  pgdb_couriers: 
    image: postgres
    container_name:  pgdb_couriers
    volumes: 
      - ./CourierService/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    expose:
      - "5435"
    ports:
      - "5435:5432"
    environment: 
      - POSTGRES_DB=couriers
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  pgdb_users: 
    image: postgres
    container_name:  pgdb_users
    volumes: 
      - ./UserService/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    expose:
      - "5434"
    ports:
      - "5434:5432"
    environment: 
      - POSTGRES_DB=users
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  orders:
    build: ./OrderService
    container_name: order_service
    volumes:
      - ./OrderService:/usr/src/app
    ports:
      - "8000:8000"
    restart: on-failure
    depends_on: 
      - pgdb_orders
      - rabbitmq
    command: bash -c "python manage.py runserver 0.0.0.0:8000"

  orders_consumer:
    build: ./OrderService
    container_name: order_consumer_service
    volumes:
      - ./OrderService:/usr/src/app
    depends_on: 
      - pgdb_orders
      - orders
      - rabbitmq
    command: bash -c "python consume.py"

  users:
    build: ./UserService
    container_name: users_service
    volumes:
      - ./UserService:/usr/src/app
    ports:
      - "8001:8001"
    restart: on-failure
    depends_on: 
      - pgdb_users
      - rabbitmq
    command: bash -c "python manage.py runserver 0.0.0.0:8001"

  couriers:
    build: ./CourierService
    container_name: courier_service
    volumes:
      - ./CourierService:/usr/src/app
    ports:
      - "8002:8002"
    restart: on-failure
    depends_on: 
      - pgdb_couriers
      - rabbitmq
    command: bash -c "python manage.py runserver 0.0.0.0:8002"
version: "3.7"

services:
  orders:
    build: ./OrderService
    container_name: order_service
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./OrderService:/usr/src/app
    ports:
      - "8000:8000"
    depends_on: 
      - pgdb_orders
  pgdb_orders: 
    image: postgres
    container_name:  pgdb_orders
    volumes: 
      - ./OrderService/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    expose:
      - "5433"
    ports:
      - "5433:5432"
    environment: 
      - POSTGRES_DB=orders
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  users:
    build: ./UserService
    container_name: users_service
    command: python manage.py runserver 0.0.0.0:8001
    volumes:
      - ./UserService:/usr/src/app
    ports:
      - "8001:8001"
    depends_on: 
      - pgdb_users
  pgdb_users: 
    image: postgres
    container_name:  pgdb_users
    volumes: 
      - ./UserService/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    expose:
      - "5434"
    ports:
      - "5434:5432"
    environment: 
      - POSTGRES_DB=users
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  rabbitmq:
   image: rabbitmq:3-management
   hostname: "rabbitmq"
   environment:
     RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
     RABBITMQ_DEFAULT_USER: "rabbitmq"
     RABBITMQ_DEFAULT_PASS: "rabbitmq"
     RABBITMQ_DEFAULT_VHOST: "/"
   ports:
     - "15672:15672"
     - "5600:5672"
   labels:
     NAME: "rabbitmq"
   volumes:
     - "./RabbitMQ/enabled_plugins:/etc/rabbitmq/enabled_plugins"